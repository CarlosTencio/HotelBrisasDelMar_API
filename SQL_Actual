---- Insertar pÃ¡ginas
-- INSERT INTO Page (PageTitle, PageContent)
-- VALUES ('Inicio', 'En Brisas del Mar, te invitamos a descubrir un paraíso de tranquilidad y belleza natural. Ubicado frente a las aguas cristalinas del océano, nuestro hotel combina elegancia y comodidad para ofrecerte una experiencia inolvidable. Desde el momento en que llegas, te envuelve la brisa marina y la cálida hospitalidad de nuestro equipo. Contamos con habitaciones diseñadas para el descanso, cada una con vistas espectaculares y todas las comodidades que necesitas para una estancia placentera. Relájate en nuestra piscina al aire libre, disfruta de exquisitos platillos en nuestro restaurante con gastronomía local e internacional, o explora las maravillas que nos rodean, desde playas de arena dorada hasta aventuras acuáticas. Ya sea que busques un escape romántico, unas vacaciones familiares o un retiro de relajación, Brisas del Mar es el destino perfecto. Déjanos ser parte de tus mejores recuerdos y permítenos brindarte una experiencia única donde el mar, la naturaleza y el confort se unen en armonía.
-- ¡Reserva hoy y comienza a vivir la magia de Brisas del Mar!');

-- INSERT INTO Page (PageTitle, PageContent)
-- VALUES ('Sobre nosotros', 'En Hotel Brisas del Mar, nos especializamos en ofrecer una experiencia Ãºnica y acogedora para nuestros huÃ©spedes. Ubicado en Puerto viejo, LimÃ³n, nuestro hotel combina confort, elegancia y hospitalidad excepcional para garantizar una estadÃ­a inolvidable. Desde el momento en que cruzas nuestras puertas, te recibimos con un ambiente cÃ¡lido y un servicio personalizado. Nuestras habitaciones estÃ¡n diseÃ±adas para brindar el mÃ¡ximo confort, con comodidades modernas y detalles que hacen la diferencia. AdemÃ¡s, ofrecemos una amplia gama de servicios, incluyendo restaurante de alta cocina, spa, piscina y acceso a las principales atracciones de la zona. Ya sea que viajes por negocios o placer, nuestro compromiso es hacer que tu estancia sea inigualable. Â¡Esperamos darte la bienvenida pronto y hacer de tu visita una experiencia inolvidable!.');

-- INSERT INTO Page (PageTitle, PageContent)
-- VALUES ('Contáctenos', 'Teléfonos: 2222-7070 / 2222-7171; Apartado Postal: 41001; Correo electrónico: info@brisasdelmar.com; Facebook: brisasdelmar.facebook.com; Instagram: @brisasdelmarig');

-- INSERT INTO Page (PageTitle, PageContent)
-- VALUES ('Como llegar?', 'Estamos ubicados en Manzanillo, Limón. Para llegar al hotel puedes buscarnos en Google Maps o Waze como Hotel Brisas del Mar');

-- -- Insertar imÃ¡genes
-- INSERT INTO Image (ImagePath)
-- VALUES ('/images/banner_principal.jpg');

-- INSERT INTO Image (ImagePath)
-- VALUES ('/images/equipo.jpg');

-- INSERT INTO Image (ImagePath)
-- VALUES ('/images/logo.png');

-- INSERT INTO Image (ImagePath)
-- VALUES ('/images/contacto.jpg');

-- -- Insertar relaciones en PageImages
-- INSERT INTO PageImage (PageID, ImageID)
-- VALUES (1, 1); -- PÃ¡gina inicio tiene banner principal

-- INSERT INTO PageImage (PageID, ImageID)
-- VALUES (1, 3); -- PÃ¡gina inicio tiene logo

-- INSERT INTO PageImage (PageID, ImageID)
-- VALUES (2, 2); -- PÃ¡gina sobre nosotros tiene foto del equipo

-- INSERT INTO PageImage (PageID, ImageID)
-- VALUES (2, 3); -- PÃ¡gina sobre nosotros tiene logo

-- INSERT INTO PageImage (PageID, ImageID)
-- VALUES (3, 4); -- PÃ¡gina contacto tiene imagen de contacto

-----------------Stored procedure---------------
-- CREATE PROCEDURE GetPagesWithImages
-- AS
-- BEGIN
--    SELECT 
--        p.PageID, p.PageTitle, p.PageContent, i.ImagePath
--    FROM Page p
--    LEFT JOIN PageImage pi ON p.PageID = pi.PageID
--    LEFT JOIN Image i ON pi.ImageID = i.PageImageID
-- END

--EXEC GetPagesWithImages


-- CREATE PROCEDURE GetMainAds
-- AS
-- BEGIN
-- 	Select AdID, Name, Img, ImgUrl 
-- 	from [dbo].[Ad]
-- 	Where IsActive = 1
-- 	AND (GETDATE() BETWEEN [StartDate] AND [EndDate])
-- END

--exec GetMainAds

---- Insertar anuncio de Coca-Cola (con fecha de inicio desde hoy)
-- INSERT INTO [dbo].[Ad] ([Name], [StartDate], [EndDate], [IsActive], [Img], [ImgUrl])
-- VALUES 
-- ('Coca-Cola Promoción Verano', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-2.jpg', 
-- 'https://www.coca-cola.com');

---- Insertar anuncio de McDonald's (con fecha de inicio desde hoy)
-- INSERT INTO [dbo].[Ad] ([Name], [StartDate], [EndDate], [IsActive], [Img], [ImgUrl])
-- VALUES 
-- ('McDonalds Promoción Big Mac', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-5.jpg', 
-- 'https://www.mcdonalds.com');

---- Insertar anuncio de KFC (con fecha de inicio desde hoy)
-- INSERT INTO [dbo].[Ad] ([Name], [StartDate], [EndDate], [IsActive], [Img], [ImgUrl])
-- VALUES 
-- ('KFC Oferta Especial Combo Familiar', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-4.jpg', 
-- 'https://www.kfc.com');

--CREATE PROCEDURE GetMainPromotions
--AS
--BEGIN
--SELECT [PromotionID],[PromotionName],[Img]
--FROM [dbo].[Promotion]
--WHERE IsActive = 1
--AND (GETDATE() BETWEEN [StartDate] AND [EndDate])
--END

--EXEC GetMainPromotions

-- --insertar ejemplos para promociones
-- INSERT INTO [dbo].[Promotion] ([PromotionName], [StartDate], [EndDate], [IsActive], [Percent], [Img])
-- VALUES 
-- ('Coca-Cola Promoción Verano', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 15, -- Descuento aleatorio
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-2.jpg');

-- INSERT INTO [dbo].[Promotion] ([PromotionName], [StartDate], [EndDate], [IsActive], [Percent], [Img])
-- VALUES 
-- ('McDonalds Promoción Big Mac', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 20, -- Descuento aleatorio
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-5.jpg');

-- INSERT INTO [dbo].[Promotion] ([PromotionName], [StartDate], [EndDate], [IsActive], [Percent], [Img])
-- VALUES 
-- ('KFC Oferta Especial Combo Familiar', 
-- GETDATE(), -- Fecha de inicio desde hoy
-- DATEADD(MONTH, 3, GETDATE()), -- Fecha de fin dentro de 3 meses
-- 1, 
-- 25, -- Descuento aleatorio
-- 'https://res.cloudinary.com/dl2vh2h4h/image/upload/v1742841420/cld-sample-4.jpg');

--CREATE PROCEDURE sp_get_facilities
--    @PageTitle NVARCHAR(50)
--AS
--BEGIN
--    SELECT 
--        p.PageID,
--        p.PageTitle,
--        p.PageContent,
--        i.ImagePath 
--    FROM [dbo].[Page] p
--    JOIN [dbo].[PageImage] pi ON p.PageID = pi.PageId
--    JOIN [dbo].[Image] i ON pi.ImageId = i.PageImageId
--    WHERE p.PageTitle = @PageTitle; 
--END;

exec sp_get_facilities 'Facilidades';

--exec sp_get_facilities 'Facilidades'

-- insert into Page  (PageTitle,PageContent) values ('Facilidades','Sumérgete en un oasis de tranquilidad en nuestra exclusiva piscina rodeada de exuberante vegetación tropical. Diseñada para brindar una experiencia relajante, esta piscina cuenta con fuentes de agua que añaden un toque de serenidad al ambiente. El área de la piscina está cuidadosamente decorada con palmeras y plantas exóticas, creando un entorno natural y fresco.')
-- insert into Page  (PageTitle,PageContent) values ('Facilidades','Para aquellos que disfrutan preparando sus propias comidas, nuestro hotel ofrece una cocina totalmente equipada para huéspedes. Este espacio cuenta con todo lo necesario para que puedas cocinar con comodidad, incluyendo estufa, horno, refrigerador, utensilios de cocina, vajilla y una zona de comedor.')
insert into Page  (PageTitle,PageContent) values ('Facilidades','Facilidades	Nuestro hotel cuenta con un parqueo verde, un espacio diseñado para ofrecer comodidad a nuestros huéspedes mientras cuidamos el medio ambiente. Ubicado en una zona rodeada de naturaleza, este estacionamiento combina áreas pavimentadas con superficies permeables que permiten la filtración del agua, reduciendo el impacto ambiental.	')

insert into [Image]  (ImagePath) values ('https://dynamic-media-cdn.tripadvisor.com/media/photo-o/01/22/b5/f0/piscina.jpg?w=1900&h=1400&s=1')
insert into [Image]  (ImagePath) values ('https://dynamic-media-cdn.tripadvisor.com/media/photo-o/01/22/b5/f0/piscina.jpg?w=1900&h=1400&s=1')
insert into [Image]  (ImagePath) values ('https://media-cdn.tripadvisor.com/media/photo-s/1c/50/ee/77/acceso-para-cualquier.jpg')
 
insert into PageImage (PageID,ImageID) VALUES (4,5)
insert into PageImage (PageID,ImageID) VALUES (5,6)
insert into PageImage (PageID,ImageID) VALUES (6,7)
-- INSERT IMAGES 

-- INSERT INTO [dbo].[Image]
--           ([ImagePath])
--     VALUES
--           ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131527/areadepiscina_uqh9fc.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131523/alrededores_y4fgsv.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131523/areadepiscina5_pkemkt.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131524/restaurante2_hqnsan.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131524/restaurante_pjaza3.webp'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131525/salas_qymi1s.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131524/habitacion_f3zkjf.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131524/habitacion2_k65csg.webp'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131526/areadepiscina3_lvq2xt.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131524/areadepiscina2_qddrnc.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131522/areadepiscina4_iietjt.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743135093/areadepiscina6_boqwvc.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743136634/restaurante3_da8mb5.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743136631/alrededores8_p4tsam.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743136631/alrededores9_o1xp5q.jpg'),
-- 		   ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1743136632/areadepiscina7_f8oz0e.jpg'),
--         ('https://res.cloudinary.com/dgcrjewoy/image/upload/v1743458859/HotelHome_tlxv2b.jpg')


-- INSERT IMAGES+PAGES - este puede variar el orden en caso de que ya hayan agregado imágenes previamente, pues los IDs de Image serían distintos

INSERT INTO [dbo].[PageImage]
          ([PageID]
          ,[ImageID])
    VALUES
          (2,5), (2,6), (2,7), (2,8), (2,9), (2,10), (2,11), (2,12), (2,13), (2,14), (2,15), (2,16), (2,17), (2,18), (2,19), (2,20), (1,24)

----------------------------------------


--Imagen para Contact
-- INSERT INTO [dbo].[Image] ([ImagePath]) VALUES ('https://res.cloudinary.com/dqmusg1pu/image/upload/v1744483188/istockphoto-2057973065-1024x1024_uwxx2c.jpg') 
-- INSERT INTO [dbo].[PageImage] ([PageID],[ImageID]) VALUES (3,22)

-- ------------------INSERTS ROOMRATE PAGE------------------
-- insert into Page  (PageTitle,PageContent) values ('RoomRate','')
-- insert into Page  (PageTitle,PageContent) values ('RoomRate','')
-- insert into Page  (PageTitle,PageContent) values ('RoomRate','')

-- insert into [Image]  (ImagePath) values ('https://dynamic-media-cdn.tripadvisor.com/media/photo-o/01/22/b5/f0/piscina.jpg?w=1900&h=1400&s=1')
-- insert into [Image]  (ImagePath) values ('https://dynamic-media-cdn.tripadvisor.com/media/photo-o/01/22/b5/f0/piscina.jpg?w=1900&h=1400&s=1')
-- insert into [Image]  (ImagePath) values ('https://media-cdn.tripadvisor.com/media/photo-s/1c/50/ee/77/acceso-para-cualquier.jpg')


---------------------Insert in RoomType--------------------------

--RESERVA
--Use ~ para separar cada caracteristica

-- INSERT INTO RoomType(RoomTypeName, Price,Characteristics,description, Image)VALUES('Normal', 500,'La habitación cuanta con dos camas~ una matrimonial y una individual','Perfecto para que nos venga a visitar con un precio más cómodo, pero igual de agradable', 'https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131523/alrededores_y4fgsv.jpg')
-- INSERT INTO RoomType(RoomTypeName, Price,Characteristics,description, Image)VALUES('Premium', 1000,'La habitación cuanta con dos camas matrimoniales~ un Jacuzzi','Perfecto para que nos venga a visitar con la mayor comodidad', 'https://res.cloudinary.com/dqmusg1pu/image/upload/v1743131527/areadepiscina_uqh9fc.jpg')


---------------------SP ROOMRATE PAGE----------------------
--Insert season
-- INSERT INTO Season 
--    (SeasonName, StartDate, EndDate, [Percent], IsActive, IsHigh)
-- VALUES 
--    ('Temporada Alta', GETDATE(), DATEADD(DAY, 6, GETDATE()), 15, 1, 1);

-- CREATE PROCEDURE sp_get_RoomType_season
-- As
-- BEGIN
-- 	SELECT 
-- 		rt.RoomTypeId,
-- 		rt.RoomTypeName,
-- 		CAST(rt.Price * (1 + CASE WHEN s.IsHigh = 1 THEN s.[Percent] / 100.0 ELSE -s.[Percent] / 100.0 END)AS INT)AS Price,
-- 		rt.Characteristics,
-- 		rt.description,
-- 		rt.Image
-- 	FROM 
-- 		RoomType rt
-- 	INNER JOIN 
-- 		Season s
-- 		ON GETDATE() BETWEEN s.StartDate AND s.EndDate
-- 	WHERE 
-- 		s.IsActive = 1;
-- END

--Exec sp_get_RoomType_season


 -------Booking----------------
--RESERVA
INSERT INTO RoomType(RoomTypeName, Price,Characteristics,description)VALUES('Normal', 500,'La habitaci�n cuanta con dos camas, una matrimonial y una individual','Perfecto para una pareja con su hijo')
INSERT INTO RoomType(RoomTypeName, Price,Characteristics,description)VALUES('Premium', 1000,'La habitaci�n cuanta con dos camas matrimoniales y una Jacuzzi','Perfecto para una pareja con su hijo')
select * from RoomType
----isActive 1=se puede usar
--status 1=ocupada
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,1,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,2,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,3,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,4,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(2,1,5,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(2,1,6,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(2,1,7,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(2,1,8,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,10,0)
-- INSERT INTO Room(RoomTypeId,[IsActice],[RoomNumber],[Status])VALUES(1,1,11,0)
-- INSERT INTO [HotelDB].[dbo].[Customer] ([CustomerName], [CustomerLastName], [CustomerEmail], [CardNumber])
-- VALUES 
-- ('John', 'Doe', 'johndoe@example.com', '1234-5678-9876-5432'),
-- ('Jane', 'Smith', 'janesmith@example.com', '2345-6789-8765-4321'),
-- ('Michael', 'Johnson', 'michaeljohnson@example.com', '3456-7890-7654-3210'),
-- ('Emily', 'Davis', 'emilydavis@example.com', '4567-8901-6543-2109'),
-- ('David', 'Brown', 'davidbrown@example.com', '5678-9012-5432-1098'),
-- ('Sarah', 'Miller', 'sarahmiller@example.com', '6789-0123-4321-0987'),
-- ('James', 'Wilson', 'jameswilson@example.com', '7890-1234-3210-9876'),
-- ('Linda', 'Moore', 'lindamoore@example.com', '8901-2345-2109-8765'),
-- ('Robert', 'Taylor', 'roberttaylor@example.com', '9012-3456-1098-7654'),
-- ('Olivia', 'Anderson', 'oliviaanderson@example.com', '0123-4567-9876-6543');

--select * from [Booking]

INSERT INTO [HotelDB].[dbo].[Booking] ([CreationDate], [BookingReferenceNumber], [CheckIn], [CheckOut], [CustomerID], [Transaction], [IsActive],[RoomId])
VALUES
('2025-04-01 10:00:00', 'BR123456', '2025-04-10', '2025-04-15', 1, 200000, 1,28),
( '2025-04-03 14:00:00', 'BR123458', '2025-04-15', '2025-04-20', 3, 'TXN003', 1,29),
( '2025-04-04 16:00:00', 'BR123459', '2025-04-20', '2025-04-25', 4, 'TXN004', 1,30),
( '2025-04-05 18:00:00', 'BR123460', '2025-04-25', '2025-04-30', 5, 'TXN005', 1,31),
( '2025-04-06 20:00:00', 'BR123461', '2025-04-28', '2025-05-02', 6, 'TXN006', 1,32),
('2025-04-07 22:00:00', 'BR123462', '2025-05-01', '2025-05-05', 7, 'TXN007', 1,33),
( '2025-04-08 10:30:00', 'BR123463', '2025-05-03', '2025-05-08', 8, 'TXN008', 1,34)
INSERT INTO [HotelDB].[dbo].[Booking] 
([CreationDate], [BookingReferenceNumber], [CheckIn], [CheckOut], [CustomerID], [Transaction], [IsActive], [RoomId])
VALUES
('2025-04-03 14:00:00', 'BR123456', '2025-04-10', '2025-04-15', 1, 'TXN001', 1, 37),
('2025-04-03 14:00:00', 'BR123458', '2025-04-10', '2025-04-15', 3, 'TXN003', 1, 38),      
('2025-04-04 16:00:00', 'BR123459', '2025-04-10', '2025-04-15', 4, 'TXN004', 1, 39),
('2025-04-05 18:00:00', 'BR123460', '2025-04-10', '2025-04-15', 5, 'TXN005', 1, 40),
('2025-04-06 20:00:00', 'BR123461', '2025-04-10', '2025-04-15', 6, 'TXN006', 1, 41),
('2025-04-03 14:00:00', 'BR123456', '2025-04-10', '2025-04-15', 1, 'TXN001', 1, 42),
('2025-04-07 22:00:00', 'BR123462', '2025-04-10', '2025-04-15', 7, 'TXN007', 1, 43),
('2025-04-08 10:30:00', 'BR123463', '2025-04-10', '2025-04-15', 8, 'TXN008', 1, 44),
('2025-04-08 10:30:00', 'BR123463', '2025-04-10', '2025-04-15', 8, 'TXN008', 1, 45);
---------------------SP roomType-----------------------------------------------

-- CREATE PROCEDURE sp_get_all_RoomType
-- AS
-- BEGIN
-- SELECT RoomTypeId,RoomTypeName
-- FROM RoomType
-- END

-- EXEC sp_get_all_RoomType


--------------------------SP check_availability -------------------------------------------------------

-- CREATE PROCEDURE sp_check_availability
--    @RoomType INT,
--    @StartTime DATETIME,
--    @EndTime DATETIME
-- AS
-- BEGIN
--    SET NOCOUNT ON;

--    -- Calcular n�mero de noches
--    DECLARE @NumNights INT;
--    SET @NumNights = DATEDIFF(DAY, @StartTime, @EndTime);

--    -- Sumar promociones activas
--    DECLARE @TotalDiscountPercent DECIMAL(10,2);
--    SELECT @TotalDiscountPercent = ISNULL(SUM([Percent]), 0)
--    FROM Promotion
--    WHERE IsActive = 1
--      AND GETDATE() BETWEEN StartDate AND EndDate;

--    -- Verifica disponibilidad exacta
--    IF EXISTS (
--        SELECT 1
--        FROM Room R
--        INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--        INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--        WHERE S.IsActive = 1
--          AND R.RoomTypeId = @RoomType 
--          AND R.RoomId NOT IN (
--              SELECT B.RoomId
--              FROM Booking B
--              WHERE (@StartTime < B.CheckOut AND @EndTime > B.CheckIn)
--          )
--    )
--    BEGIN
--        SELECT TOP 1 
--            R.RoomNumber, 
--            R.RoomId,
--            R.RoomTypeId,
--            RT.RoomTypeName,
--            RT.Description,
--            CAST(@NumNights * RT.Price * 
--                (1 + CASE WHEN S.IsHigh = 1 THEN S.[Percent] / 100.0 ELSE -S.[Percent] / 100.0 END) *
--                (1 - @TotalDiscountPercent / 100.0) AS INT) AS Price,
--            RT.Image AS ImgUrl,
--            @StartTime AS CheckIn,
--            @EndTime AS CheckOut,
--            'Available' AS ResultType
--        FROM Room R
--        INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--        INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--        WHERE S.IsActive = 1
--          AND R.RoomTypeId = @RoomType
--          AND R.RoomId NOT IN (
--              SELECT B.RoomId
--              FROM Booking B
--              WHERE (@StartTime < B.CheckOut AND @EndTime > B.CheckIn)
--          );
--    END
--    ELSE IF EXISTS (
--        SELECT 1
--        FROM Room R
--        INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--        INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--        WHERE S.IsActive = 1
--          AND R.RoomId NOT IN (
--              SELECT B.RoomId
--              FROM Booking B
--              WHERE (@StartTime < B.CheckOut AND @EndTime > B.CheckIn)
--          )
--    )
--    BEGIN
--        -- Otra habitaci�n de diferente tipo en el mismo rango de fechas
--        SELECT TOP 1 
--            R.RoomNumber, 
--            R.RoomId,
--            R.RoomTypeId,
--            RT.RoomTypeName,
--            RT.Description,
--            CAST(@NumNights * RT.Price * 
--                (1 + CASE WHEN S.IsHigh = 1 THEN S.[Percent] / 100.0 ELSE -S.[Percent] / 100.0 END) *
--                (1 - @TotalDiscountPercent / 100.0) AS INT) AS Price,
--            RT.Image AS ImgUrl,
--            @StartTime AS CheckIn,
--            @EndTime AS CheckOut,
--            'Recommendation' AS ResultType
--        FROM Room R
--        INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--        INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--        WHERE S.IsActive = 1
--          AND R.RoomId NOT IN (
--              SELECT B.RoomId
--              FROM Booking B
--              WHERE (@StartTime < B.CheckOut AND @EndTime > B.CheckIn)
--          );
--    END
--       ELSE
--    BEGIN
--        -- Busca la primera fecha disponible a partir del @EndTime
--        DECLARE @AltStart DATETIME = @EndTime;
--        DECLARE @AltEnd DATETIME;
--        DECLARE @MaxSearchDays INT = 30; -- M�ximo de d�as que puede recomendar
--        DECLARE @DaysChecked INT = 0;

--        WHILE @DaysChecked < @MaxSearchDays
--        BEGIN
--            SET @AltEnd = DATEADD(DAY, @NumNights, @AltStart);

--            IF EXISTS (
--                SELECT 1
--                FROM Room R
--                INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--                INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--                WHERE S.IsActive = 1
--                  AND R.RoomTypeId = @RoomType
--                  AND R.RoomId NOT IN (
--                      SELECT B.RoomId
--                      FROM Booking B
--                      WHERE (@AltStart < B.CheckOut AND @AltEnd > B.CheckIn)
--                  )
--            )
--            BEGIN
             
--                SELECT TOP 1 
--                    R.RoomNumber, 
--                    R.RoomId,
--                    R.RoomTypeId,
--                    RT.RoomTypeName,
--                    RT.Description,
--                    CAST(@NumNights * RT.Price * 
--                        (1 + CASE WHEN S.IsHigh = 1 THEN S.[Percent] / 100.0 ELSE -S.[Percent] / 100.0 END) *
--                        (1 - @TotalDiscountPercent / 100.0) AS INT) AS Price,
--                    RT.Image AS ImgUrl,
--                    @AltStart AS CheckIn,
--                    @AltEnd AS CheckOut,
--                    'AlternativeDates' AS ResultType
--                FROM Room R
--                INNER JOIN RoomType RT ON RT.RoomTypeId = R.RoomTypeId
--                INNER JOIN Season S ON GETDATE() BETWEEN S.StartDate AND S.EndDate
--                WHERE S.IsActive = 1
--                  AND R.RoomTypeId = @RoomType
--                  AND R.RoomId NOT IN (
--                      SELECT B.RoomId
--                      FROM Booking B
--                      WHERE (@AltStart < B.CheckOut AND @AltEnd > B.CheckIn)
--                  );

--                BREAK;
--            END

--            -- Si no encontr�, prueba siguiente d�a
--            SET @AltStart = DATEADD(DAY, 1, @AltStart);
--            SET @DaysChecked += 1;
--        END
-- 		IF @DaysChecked = @MaxSearchDays
-- BEGIN
--    SELECT 
--        NULL AS RoomNumber, 
--        NULL AS RoomId,
--        @RoomType AS RoomTypeId,
--        NULL AS RoomTypeName,
--        NULL AS Description,
--        NULL AS Price,
--        NULL AS ImgUrl,
--        NULL AS CheckIn,
--        NULL AS CheckOut,
--        'NoAvailability' AS ResultType;
--      END
--    END -- Fin ELSE final (AlternativeDates)
-- END -- Fin del procedimiento


		
EXEC [dbo].[sp_check_availability]
			@RoomType =1,
			@StartTime = N'2025-04-19',
			@EndTime = N'2025-04-25'

		delete Booking
		
		select * 
		from Booking

		update room
		set Status=0 

		select *
		from Room

--	delete from Booking
-----------------------sp reserva--------------------------------------

-- CREATE PROCEDURE sp_CreateBooking
--    @CustomerName nvarchar(max),
--    @CustomerLastName nvarchar(max),
--    @CustomerEmail nvarchar(max),
--    @CardNumber nvarchar(max),
-- 	    @RoomID INT,
--    @CheckIn datetime2(7),
--    @CheckOut datetime2(7),
--    @Transaction INT
-- AS
-- BEGIN
--    SET NOCOUNT ON;
    
--    BEGIN TRY
--         ----Iniciar la transacci�n
--        BEGIN TRANSACTION;
        
--        DECLARE @CustomerID INT;
        
--         ----Verificar si el cliente ya existe (por email)
--        SELECT @CustomerID = CustomerID 
--        FROM dbo.Customer 
--        WHERE CustomerEmail = @CustomerEmail;
        
--         ----Si el cliente no existe, insertarlo
--        IF @CustomerID IS NULL
--        BEGIN
--            INSERT INTO dbo.Customer (
--                CustomerName,
--                CustomerLastName,
--                CustomerEmail,
--                CardNumber
--            )
--            VALUES (
--                @CustomerName,
--                @CustomerLastName,
--                @CustomerEmail,
--                @CardNumber
--            );
            
--             ----Obtener el ID del cliente reci�n insertado
--            SET @CustomerID = SCOPE_IDENTITY();
--        END;
        
--         ----Generar n�mero de referencia �nico
--        DECLARE @BookingReference nvarchar(max);
--        SET @BookingReference = 'RES-' + CONVERT(VARCHAR(8), GETDATE(), 112) + 
--                               '-' + RIGHT('000000' + CAST(ABS(CHECKSUM(NEWID())) % 1000000 AS VARCHAR(6)), 6);
        
--         ----Insertar la reserva
--        INSERT INTO dbo.Booking (
--            CreationDate,
--            BookingReferenceNumber,
--            CheckIn,
--            CheckOut,
--            CustomerID,
--            RoomID,
--            [Transaction],
--            IsActive
--        )
--        VALUES (
--            GETDATE(),                   
--            @BookingReference,           
--            @CheckIn,
--            @CheckOut,
--            @CustomerID,                 
--            @RoomID,
--            @Transaction,
--            1                           
--        );

-- 		----Actualizar estado de habitaci�n
-- 		Update Room
-- 		SET Status = 1
-- 		WHERE RoomId=  @RoomID;
        
--         ----Confirmar la transacci�n
--        COMMIT TRANSACTION;
        
--         ----Devuelve informaci�n sobre la operaci�n exitosa
--        SELECT 
--            'Success' AS Status,
--            @BookingReference AS BookingReference,
-- 			@CustomerName AS Name,
-- 			@CustomerLastName AS LastName,
-- 			@CustomerEmail AS Email
            
--    END TRY
--    BEGIN CATCH
--         ----Si ocurre alg�n error, hacer rollback
--        IF @@TRANCOUNT > 0
--            ROLLBACK TRANSACTION;
        
--         ----Devolver informaci�n del error
--        SELECT 
--            'Error' AS Status,
--            ERROR_MESSAGE() AS ErrorMessage,
--            ERROR_NUMBER() AS ErrorNumber,
--            ERROR_SEVERITY() AS ErrorSeverity,
--            ERROR_STATE() AS ErrorState,
--            ERROR_PROCEDURE() AS ErrorProcedure,
--            ERROR_LINE() AS ErrorLine;
--    END CATCH;
-- END;
